#!/bin/bash

# AIME MLC - Machine Learning Container Management 
# 
# Copyright (c) AIME GmbH and affiliates. Find more info at https://www.aime.info/mlc 
# 
# This software may be used and distributed according to the terms of the MIT LICENSE 

CONTAINER_NAME=$1

if [[ $CONTAINER_NAME == "" ]]
then
  echo "Open a ml-container"
  echo -e "\nUsage: mlc-open container_name\n"
  exit -1
fi

function check_container_exists {
  docker container ps -a --filter=name=^/$1$ --filter=label=aime.mlc --format "{{.Names}}"
}

function get_container_user {
  docker container ps -a --filter=name=^/$1$ --filter=label=aime.mlc --format "{{.Label \"aime.mlc.USER\"}}"
}

function check_container_running {
  docker container ps --filter=name=^/$1$ --filter=label=aime.mlc --format "{{.Names}}"
}

function get_container_active {  
  #docker stats --format "{{.Name}} {{.PIDs}}" --no-stream
  OUT=$(docker top $1 -o pid 2>/dev/null )
  EXIT_CODE=$?
  OUT=$(echo -e "$OUT" | wc -l)
#  echo "Returned: $EXIT_CODE $OUT"
  if [ $EXIT_CODE == "0" ] && [ $OUT -gt 2 ]
  then
    echo "True"
  else
    echo "False"
  fi
}

USER_ID=$(id -u)
GROUP_ID=$(id -g)
CONTAINER_TAG=$CONTAINER_NAME._.$USER_ID

if [[ $CONTAINER_TAG != $(check_container_exists $CONTAINER_TAG) ]]
then  
  CONTAINER_TAG=$CONTAINER_NAME
  if [[ $CONTAINER_TAG != $(check_container_exists $CONTAINER_TAG) ]]
  then
    echo "["$CONTAINER_NAME"] does not exist."
    exit -3
  fi
fi

if [[ $CONTAINER_TAG != $(check_container_running $CONTAINER_TAG) ]]
then
  echo "["$CONTAINER_NAME"] starting container"
  docker container start $CONTAINER_TAG >> /dev/null
else
  echo "["$CONTAINER_NAME"] container already running"
fi

echo "["$CONTAINER_NAME"] opening shell to container"

#docker attach to container
SET_ENV="-e DISPLAY=$DISPLAY"
if [[ -v NCCL_P2P_LEVEL ]]; then
  SET_ENV="$SET_ENV -e NCCL_P2P_LEVEL=$NCCL_P2P_LEVEL"
fi

docker exec -it $SET_ENV --user $USER_ID:$GROUP_ID $CONTAINER_TAG bash
EXIT_CODE=$?

if [[ $EXIT_CODE == 1 ]]
then
  echo "["$CONTAINER_NAME"] detached from container, container keeps running"
else
  echo "["$CONTAINER_NAME"] container shell closed."
fi

ACTIVE=$(get_container_active $CONTAINER_TAG)

if [ $ACTIVE == "True" ]
then
  echo "["$CONTAINER_NAME"] container is active, keeped running."
else
  echo "["$CONTAINER_NAME"] container is inactive, stopping container ..."
  RESULT=$(docker container stop $CONTAINER_TAG)
  echo -e "["$CONTAINER_NAME"] container stopped.\n"  
fi
